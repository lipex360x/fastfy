{
	"Schema Template": {
		"prefix": "schemaTemplate",
		"body": [
			"import { z } from 'zod'",
			"",
			"export const ${1:SCHEMA_NAME}Schema = z.object({",
			"  prop: z.string(),",
			"})",
			"",
			"export type ${1:SCHEMA_NAME}Props = z.infer<typeof ${1:SCHEMA_NAME}Schema>",
			"",
		]
	},

	"Controller Template": {
		"prefix": "controllerTemplate",
		"body": [
			"import { FastifyRequest, FastifyReply } from 'fastify'",
			"",
			"export class ${CONTROLLER_NAME}Controller {",
			"  async execute(request: FastifyRequest, reply: FastifyReply) {",
			"    return reply.status(200).send({ message: 'hello controller' })",
			"  }",
			"}",
			"",
		]
	},

	"Test E2E Template": {
		"prefix": "teste2etemplate",
		"body": [
			"import request from 'supertest'",
			"import { afterAll, beforeAll, describe, expect, it } from 'vitest'",
			"",
			"import { app } from '@/http/app'",
			"",
			"describe('[e2e] - ${THE_TEST}', () => {",
			"  beforeAll(async () => {",
			"    await app.ready()",
			"  })",
			"",
			"  afterAll(async () => {",
			"    await app.close()",
			"  })",
			"",
			"  it('should be able to ${TEST_SOMETHING}', async () => {",
			"    // arrange",
			"",
			"    // act",
			"    const response = await request(app.server)",
			"      .get('/${THE_ROUTE}')",
			"      .set('Authorization', `Bearer ${token}`)",
			"      .send()",
			"",
			"    // assert",
			"    expect(response.statusCode).toEqual(200)",
			"  })",
			"})",
			""
		]
	},
	
}